{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\OneDrive\\\\Escritorio\\\\TFG\\\\Projecte\\\\aplicacion\\\\src\\\\Servicio\\\\PrivateRoute.js\";\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthenticatedRoute({\n  component: C,\n  appProps,\n  ...rest\n}) {\n  return (\n    /*#__PURE__*/\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    _jsxDEV(Route, { ...rest,\n      render: props => appProps.isLogged ? /*#__PURE__*/_jsxDEV(C, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)\n  );\n}\n_c = AuthenticatedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticatedRoute\");","map":{"version":3,"sources":["C:/Users/Lucas/OneDrive/Escritorio/TFG/Projecte/aplicacion/src/Servicio/PrivateRoute.js"],"names":["Route","Redirect","AuthenticatedRoute","component","C","appProps","rest","props","isLogged"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,eAAe,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,SAAS,EAAEC,CAAb;AAAgBC,EAAAA,QAAhB;AAA0B,KAAGC;AAA7B,CAA5B,EAAiE;AAC5E;AAAA;AAEI;AACA;AACA,YAAC,KAAD,OAAWA,IAAX;AAAiB,MAAA,MAAM,EAAEC,KAAK,IAC1BF,QAAQ,CAACG,QAAT,gBACI,QAAC,CAAD,OAAOD;AAAP;AAAA;AAAA;AAAA;AAAA,cADJ,gBAEM,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA;AAJJ;AAUH;KAXuBL,kB","sourcesContent":["import { Route, Redirect } from 'react-router-dom';\r\n\r\nexport default function AuthenticatedRoute({ component: C, appProps, ...rest }) {\r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            appProps.isLogged ?\r\n                <C {...props} />\r\n                : <Redirect to=\"/\" />\r\n        )} />\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}