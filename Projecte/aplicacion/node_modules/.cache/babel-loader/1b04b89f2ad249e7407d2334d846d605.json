{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\OneDrive\\\\Escritorio\\\\TFG\\\\Projecte\\\\aplicacion\\\\src\\\\Components\\\\Calendari.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport 'react-calendar/dist/Calendar.css';\nimport { ToggleButtonGroup, ToggleButton, Button } from \"react-bootstrap\";\nimport ListDays from \"./ListDays\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Calendari({\n  Index,\n  Any\n}) {\n  _s();\n\n  const dies_text = [\"DL\", \"DT\", \"DC\", \"DJ\", \"DV\", \"DS\", \"DG\"];\n  const [value, setValue] = useState([]);\n\n  const handleChange = val => {\n    if (!value.indexOf(val)) {\n      console.log(value.includes(val));\n      setValue(val);\n    }\n  };\n\n  const createMes = (any, iMes) => {\n    return createTabla(any, iMes);\n  };\n\n  const createTabla = (any, iMes) => {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [createTitolDies(), createSetmanes(any, iMes)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  };\n\n  const createTitolDies = () => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: dies_text.map(dia => /*#__PURE__*/_jsxDEV(\"th\", {\n        children: dia\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 41\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  };\n\n  const createSetmanes = (any, iMes) => {\n    const fechas = numerate(any, iMes);\n    const dia_actual = new Date();\n    let counter = 0;\n    const dias_mes = diasEnUnMes(iMes + 1, any);\n    const setmanes = [];\n\n    for (let i = 0; i < 6; i++) {\n      const dies = [];\n\n      for (let j = 0; j < 7; j++) {\n        if (counter < dias_mes) {\n          const fecha = fechas[counter];\n          let trobat = false;\n          let dia_semana = fecha.getDay();\n\n          if (dia_semana === 0) {\n            dia_semana = 6;\n          } else {\n            dia_semana--;\n          }\n\n          if (fecha.getDay() === dia_actual.getDay() && fecha.getDate() === dia_actual.getDate() && fecha.getMonth() === dia_actual.getMonth()) {\n            trobat = true;\n          }\n\n          if (dia_semana === j) {\n            if (dia_semana === 5 || dia_semana === 6) {\n              dies.push( /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n                  type: \"checkbox\",\n                  defaultValue: [1, 3],\n                  children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n                    className: trobat ? \"activation\" : null,\n                    variant: \"dark\",\n                    disabled: true,\n                    children: fecha.getDate()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 39\n              }, this));\n            } else {\n              if (fecha < dia_actual) {\n                dies.push( /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n                    type: \"checkbox\",\n                    children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n                      className: trobat ? \"activation\" : null,\n                      disabled: true,\n                      children: fecha.getDate()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 43\n                }, this));\n              } else {\n                dies.push( /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n                    type: \"checkbox\",\n                    value: value,\n                    onChange: handleChange,\n                    children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n                      value: fecha,\n                      children: fecha.getDate()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 43\n                }, this));\n              }\n            }\n\n            counter++;\n          } else {\n            dies.push( /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 35\n            }, this));\n          }\n        }\n      }\n\n      setmanes.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: dies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 27\n      }, this));\n    }\n\n    return setmanes;\n  };\n\n  function DataPerDia(any, iMes, dia) {\n    var date = new Date(any, iMes, dia);\n    return new Date(date.setDate(dia));\n  }\n\n  function numerate(any, iMes) {\n    let fechas = [];\n\n    for (let i = 1; i <= diasEnUnMes(iMes + 1, any); i++) {\n      let fecha = DataPerDia(any, iMes, i);\n      fechas.push(fecha);\n    }\n\n    return fechas;\n  }\n\n  function diasEnUnMes(mes, any) {\n    return new Date(any, mes, 0).getDate();\n  }\n\n  const eliminaDia = index => {\n    const listaActualizada = value.filter((day, i) => i !== index);\n    setValue(listaActualizada);\n  };\n\n  const enviaDies = () => {\n    if (value.length !== 0) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-auto margin\",\n        children: createMes(Any, Index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-auto\",\n        children: /*#__PURE__*/_jsxDEV(ListDays, {\n          days: value,\n          funcion: eliminaDia,\n          envia: enviaDies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Calendari, \"nXyUXLCLqjbO8MhWxJGJNfpoKZM=\");\n\n_c = Calendari;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendari\");","map":{"version":3,"sources":["C:/Users/Lucas/OneDrive/Escritorio/TFG/Projecte/aplicacion/src/Components/Calendari.js"],"names":["React","useEffect","useState","ToggleButtonGroup","ToggleButton","Button","ListDays","Calendari","Index","Any","dies_text","value","setValue","handleChange","val","indexOf","console","log","includes","createMes","any","iMes","createTabla","createTitolDies","createSetmanes","map","dia","fechas","numerate","dia_actual","Date","counter","dias_mes","diasEnUnMes","setmanes","i","dies","j","fecha","trobat","dia_semana","getDay","getDate","getMonth","push","DataPerDia","date","setDate","mes","eliminaDia","index","listaActualizada","filter","day","enviaDies","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,kCAAP;AACA,SAAQC,iBAAR,EAA2BC,YAA3B,EAAyCC,MAAzC,QAAsD,iBAAtD;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,eAAe,SAASC,SAAT,CAAoB;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAApB,EAAkC;AAAA;;AAC7C,QAAMC,SAAS,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CAAlB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMW,YAAY,GAAIC,GAAD,IAAS;AAC1B,QAAG,CAACH,KAAK,CAACI,OAAN,CAAcD,GAAd,CAAJ,EAAuB;AACnBE,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,QAAN,CAAeJ,GAAf,CAAZ;AACAF,MAAAA,QAAQ,CAACE,GAAD,CAAR;AACH;AACJ,GALD;;AAQA,QAAMK,SAAS,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC7B,WAAQC,WAAW,CAACF,GAAD,EAAKC,IAAL,CAAnB;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAG,CAACF,GAAD,EAAKC,IAAL,KAAc;AAE9B,wBAAO;AAAA,iBACEE,eAAe,EADjB,EAEEC,cAAc,CAACJ,GAAD,EAAKC,IAAL,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAKH,GAPD;;AASA,QAAME,eAAe,GAAG,MAAM;AAC1B,wBACI;AAAA,gBACKb,SAAS,CAACe,GAAV,CAAeC,GAAD,iBAAS;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cAAvB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND;;AAQA,QAAMF,cAAc,GAAG,CAACJ,GAAD,EAAKC,IAAL,KAAa;AAChC,UAAMM,MAAM,GAAGC,QAAQ,CAACR,GAAD,EAAKC,IAAL,CAAvB;AACA,UAAMQ,UAAU,GAAG,IAAIC,IAAJ,EAAnB;AACA,QAAIC,OAAO,GAAG,CAAd;AACA,UAAMC,QAAQ,GAAGC,WAAW,CAACZ,IAAI,GAAC,CAAN,EAAQD,GAAR,CAA5B;AACA,UAAMc,QAAQ,GAAG,EAAjB;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACtB,YAAMC,IAAI,GAAG,EAAb;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACtB,YAAGN,OAAO,GAAGC,QAAb,EAAuB;AACnB,gBAAMM,KAAK,GAAGX,MAAM,CAACI,OAAD,CAApB;AACA,cAAIQ,MAAM,GAAG,KAAb;AACA,cAAIC,UAAU,GAAGF,KAAK,CAACG,MAAN,EAAjB;;AAEA,cAAGD,UAAU,KAAK,CAAlB,EAAoB;AAChBA,YAAAA,UAAU,GAAG,CAAb;AACH,WAFD,MAEM;AACFA,YAAAA,UAAU;AACb;;AAED,cAAGF,KAAK,CAACG,MAAN,OAAmBZ,UAAU,CAACY,MAAX,EAAnB,IAA0CH,KAAK,CAACI,OAAN,OAAoBb,UAAU,CAACa,OAAX,EAA9D,IAAsFJ,KAAK,CAACK,QAAN,OAAqBd,UAAU,CAACc,QAAX,EAA9G,EAAoI;AAChIJ,YAAAA,MAAM,GAAG,IAAT;AACH;;AAED,cAAGC,UAAU,KAAKH,CAAlB,EAAoB;AAChB,gBAAGG,UAAU,KAAK,CAAf,IAAoBA,UAAU,KAAK,CAAtC,EAAwC;AACpCJ,cAAAA,IAAI,CAACQ,IAAL,eAAU;AAAA,uCACN,QAAC,iBAAD;AAAmB,kBAAA,IAAI,EAAC,UAAxB;AAAmC,kBAAA,YAAY,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAjD;AAAA,yCACI,QAAC,YAAD;AAAe,oBAAA,SAAS,EAAEL,MAAM,GAAG,YAAH,GAAkB,IAAlD;AAAwD,oBAAA,OAAO,EAAC,MAAhE;AAAuE,oBAAA,QAAQ,MAA/E;AAAA,8BAAiFD,KAAK,CAACI,OAAN;AAAjF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,sBAAV;AAKH,aAND,MAMK;AACD,kBAAGJ,KAAK,GAAGT,UAAX,EAAuB;AACnBO,gBAAAA,IAAI,CAACQ,IAAL,eAAU;AAAA,yCACN,QAAC,iBAAD;AAAmB,oBAAA,IAAI,EAAC,UAAxB;AAAA,2CACI,QAAC,YAAD;AAAe,sBAAA,SAAS,EAAEL,MAAM,GAAG,YAAH,GAAkB,IAAlD;AAAwD,sBAAA,QAAQ,MAAhE;AAAA,gCAAkED,KAAK,CAACI,OAAN;AAAlE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,wBAAV;AAKH,eAND,MAMM;AACFN,gBAAAA,IAAI,CAACQ,IAAL,eAAU;AAAA,yCACN,QAAC,iBAAD;AAAmB,oBAAA,IAAI,EAAC,UAAxB;AAAmC,oBAAA,KAAK,EAAEjC,KAA1C;AAAiD,oBAAA,QAAQ,EAAEE,YAA3D;AAAA,2CACI,QAAC,YAAD;AAAc,sBAAA,KAAK,EAAEyB,KAArB;AAAA,gCAA8BA,KAAK,CAACI,OAAN;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,wBAAV;AAKH;AACJ;;AACDX,YAAAA,OAAO;AACV,WAvBD,MAuBM;AACFK,YAAAA,IAAI,CAACQ,IAAL,eAAU;AAAA;AAAA;AAAA;AAAA,oBAAV;AACH;AACJ;AACJ;;AACDV,MAAAA,QAAQ,CAACU,IAAT,eAAc;AAAA,kBAAKR;AAAL;AAAA;AAAA;AAAA;AAAA,cAAd;AACH;;AAED,WAAOF,QAAP;AACH,GAzDD;;AA6DA,WAASW,UAAT,CAAoBzB,GAApB,EAAwBC,IAAxB,EAA6BK,GAA7B,EAAkC;AAC9B,QAAIoB,IAAI,GAAG,IAAIhB,IAAJ,CAASV,GAAT,EAAaC,IAAb,EAAmBK,GAAnB,CAAX;AACA,WAAO,IAAII,IAAJ,CAASgB,IAAI,CAACC,OAAL,CAAarB,GAAb,CAAT,CAAP;AACH;;AAED,WAASE,QAAT,CAAkBR,GAAlB,EAAsBC,IAAtB,EAA2B;AACvB,QAAIM,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,WAAW,CAACZ,IAAI,GAAC,CAAN,EAASD,GAAT,CAAhC,EAA+Ce,CAAC,EAAhD,EAAoD;AAChD,UAAIG,KAAK,GAAGO,UAAU,CAACzB,GAAD,EAAKC,IAAL,EAAWc,CAAX,CAAtB;AACAR,MAAAA,MAAM,CAACiB,IAAP,CAAYN,KAAZ;AACH;;AACD,WAAQX,MAAR;AACH;;AAED,WAASM,WAAT,CAAqBe,GAArB,EAA0B5B,GAA1B,EAA+B;AAC3B,WAAO,IAAIU,IAAJ,CAASV,GAAT,EAAc4B,GAAd,EAAmB,CAAnB,EAAsBN,OAAtB,EAAP;AACH;;AAED,QAAMO,UAAU,GAAIC,KAAD,IAAW;AAC1B,UAAMC,gBAAgB,GAAGxC,KAAK,CAACyC,MAAN,CAAa,CAACC,GAAD,EAAMlB,CAAN,KAAYA,CAAC,KAAKe,KAA/B,CAAzB;AACAtC,IAAAA,QAAQ,CAACuC,gBAAD,CAAR;AACH,GAHD;;AAKA,QAAMG,SAAS,GAAG,MAAM;AACpB,QAAG3C,KAAK,CAAC4C,MAAN,KAAiB,CAApB,EAAsB,CAErB;AACJ,GAJD;;AAMA,sBAAO;AAAA,2BACH;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBACKpC,SAAS,CAACV,GAAD,EAAMD,KAAN;AADd;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEG,KAAhB;AAAuB,UAAA,OAAO,EAAEsC,UAAhC;AAA4C,UAAA,KAAK,EAAEK;AAAnD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AAUH;;GArIuB/C,S;;KAAAA,S","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport {ToggleButtonGroup, ToggleButton, Button} from \"react-bootstrap\";\r\nimport ListDays from \"./ListDays\";\r\n\r\nexport default function Calendari ({Index, Any}) {\r\n    const dies_text = [\"DL\", \"DT\", \"DC\", \"DJ\", \"DV\", \"DS\", \"DG\"];\r\n    const [value, setValue] = useState([]);\r\n\r\n    const handleChange = (val) => {\r\n        if(!value.indexOf(val)){\r\n            console.log(value.includes(val));\r\n            setValue(val);\r\n        }\r\n    }\r\n\r\n\r\n    const createMes = (any, iMes) => {\r\n        return (createTabla(any,iMes))\r\n    }\r\n\r\n    const createTabla = (any,iMes) => {\r\n\r\n        return <table>\r\n                {createTitolDies()}\r\n                {createSetmanes(any,iMes)}\r\n        </table>\r\n\r\n    }\r\n\r\n    const createTitolDies = () => {\r\n        return (\r\n            <tr>\r\n                {dies_text.map((dia) => <th>{dia}</th>)}\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    const createSetmanes = (any,iMes) =>{\r\n        const fechas = numerate(any,iMes);\r\n        const dia_actual = new Date();\r\n        let counter = 0;\r\n        const dias_mes = diasEnUnMes(iMes+1,any);\r\n        const setmanes = [];\r\n\r\n        for(let i = 0; i < 6; i++){\r\n            const dies = [];\r\n            for(let j = 0; j < 7; j++){\r\n                if(counter < dias_mes) {\r\n                    const fecha = fechas[counter];\r\n                    let trobat = false;\r\n                    let dia_semana = fecha.getDay();\r\n\r\n                    if(dia_semana === 0){\r\n                        dia_semana = 6;\r\n                    }else {\r\n                        dia_semana--;\r\n                    }\r\n\r\n                    if(fecha.getDay() === dia_actual.getDay() && fecha.getDate() === dia_actual.getDate() && fecha.getMonth() === dia_actual.getMonth()){\r\n                        trobat = true;\r\n                    }\r\n\r\n                    if(dia_semana === j){\r\n                        if(dia_semana === 5 || dia_semana === 6){\r\n                            dies.push(<td>\r\n                                <ToggleButtonGroup type=\"checkbox\" defaultValue={[1, 3]} >\r\n                                    <ToggleButton  className={trobat ? \"activation\" : null} variant=\"dark\" disabled>{fecha.getDate()}</ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                            </td>)\r\n                        }else{\r\n                            if(fecha < dia_actual ){\r\n                                dies.push(<td>\r\n                                    <ToggleButtonGroup type=\"checkbox\" >\r\n                                        <ToggleButton  className={trobat ? \"activation\" : null} disabled>{fecha.getDate()}</ToggleButton>\r\n                                    </ToggleButtonGroup>\r\n                                </td>)\r\n                            }else {\r\n                                dies.push(<td>\r\n                                    <ToggleButtonGroup type=\"checkbox\" value={value} onChange={handleChange}>\r\n                                        <ToggleButton value={fecha} >{fecha.getDate()}</ToggleButton>\r\n                                    </ToggleButtonGroup>\r\n                                </td>)\r\n                            }\r\n                        }\r\n                        counter++;\r\n                    }else {\r\n                        dies.push(<td></td>);\r\n                    }\r\n                }\r\n            }\r\n            setmanes.push(<tr>{dies}</tr>)\r\n        }\r\n\r\n        return(setmanes)\r\n    }\r\n\r\n\r\n\r\n    function DataPerDia(any,iMes,dia) {\r\n        var date = new Date(any,iMes, dia);\r\n        return new Date(date.setDate(dia))\r\n    }\r\n\r\n    function numerate(any,iMes){\r\n        let fechas = []\r\n        for (let i = 1; i <= diasEnUnMes(iMes+1, any); i++) {\r\n            let fecha = DataPerDia(any,iMes, i);\r\n            fechas.push(fecha);\r\n        }\r\n        return (fechas)\r\n    }\r\n\r\n    function diasEnUnMes(mes, any) {\r\n        return new Date(any, mes, 0).getDate();\r\n    }\r\n\r\n    const eliminaDia = (index) => {\r\n        const listaActualizada = value.filter((day, i) => i !== index);\r\n        setValue(listaActualizada);\r\n    }\r\n\r\n    const enviaDies = () => {\r\n        if(value.length !== 0){\r\n\r\n        }\r\n    }\r\n\r\n    return(<>\r\n        <div className=\"row justify-content-center\">\r\n            <div className=\"col-auto margin\">\r\n                {createMes(Any, Index)}\r\n            </div>\r\n            <div className=\"col-auto\">\r\n                <ListDays days={value} funcion={eliminaDia} envia={enviaDies}/>\r\n            </div>\r\n        </div>\r\n    </>)\r\n}"]},"metadata":{},"sourceType":"module"}